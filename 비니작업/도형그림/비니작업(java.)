//import 할 거 하기

Public class MainActivity extends AppCompatActivity{

	private LinearLayout back;
	Paint BackgroundColor=new Paint();
	FloatingActionButton Btn6, Btn1, Btn2, Btn3, Btn4, Btn5;
	Button Capture, Share;
	Animation fabOpen, fabClose;
	boolean isOpen=false;
	

	protected void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		
		Btn1=(FloatingActionButton)findViewById(R.id.WhiteBtn);
		Btn2=(FloatingActionButton)findViewById(R.id.BlackBtn);
		Btn3=(FloatingActionButton)findViewById(R.id.RndPaintBtn);
		Btn4=(FloatingActionButton)findViewById(R.id.RndBackBtn);
		Btn5=(FloatingActionButton)findViewById(R.id.ResetBtn);
		Btn6=(FloatingActionButton)findViewById(R.id.PaletteBtn);
		Capture=(Button)findViewById(R.id.Capture);
		Share=(Button)findViewById(R.id.Share);
		
		fabOpen=AnimationUtils.loadAnimation(this,R.anim.fab_open);
		fabClose=AnimationUtils.loadAnimation(this,R.anim.fab_close);
		
		back=(LinearLayout)findViewById(R.id.mainlayout);
		
		BackgroundColor.setColor(Color.white);
	}
	
	private void animateFab(){
		if(isOpen){
			//팔레트 버튼 애니메이션 추가
			Btn1.startAnimation(fabClose);
			Btn2.startAnimation(fabClose);
			Btn3.startAnimation(fabClose);
			Btn4.startAnimation(fabClose);
			Btn5.startAnimation(fabClose);
			isOpen=false;
		}
		else{
			//팔레트 버튼 애니메이션 추가
			Btn1.startAnimation(fabOpen);
			Btn2.startAnimation(fabOpen);
			Btn3.startAnimation(fabOpen);
			Btn4.startAnimation(fabOpen);
			Btn5.startAnimation(fabOpen);
			isOpen=true;
		}			
	}
	
	
	Btn1.setOnClickListener(new View.OnClickListener(){
		public void onClick(View v){
			Mydraw.paintcolor.setColor(color.white);
		}
	});
	
	Btn2.setOnClickListener(new View.OnClickListener(){
		public void onClick(View v){
			Mydraw.paintcolor.setColor(color.black);
		}
	});
	
	Btn3.setOnClickListener(new View.OnClickListener(){
		public void onClick(View v){
			Random rnd = new Random();
			MyDraw.paintColor=Color.rgb(rnd.nextInt(255),rnd.nextInt(255),rnd.nextInt(255));
		}
	});
	
	Btn4.setOnClickListener(new View.OnClickListener(){
		public void onClick(View v){
			Random rnd = new Random();
			BackgroundColor=Color.rgb(rnd.nextInt(255),rnd.nextInt(255),rnd.nextInt(255));
			back.setBackgroundColor(BackgroundColor);  //view 자체에 할 수 있는 건지 
		}
	});
	
	
	Btn5.setOnClickListener(new View.OnClickListener(){
		public void onClick(View v){
			MyDraw.Invalidate();
		}
	});
	
	Btn6.setOnClickListener(new View.OnClickListener(){
		public void onClick(View v){
			animateFab();
		}
	}
	
	Capture.setOnClickListener(new View.OnClickListener(){
		public void onClick(view V){
			View rootView = (View)findViewById(R.id.myDraw);
 
			File screenShot = ScreenShot(rootView);
   		        if(screenShot!=null){
           			 //갤러리에 추가
          			 sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(screenShot)));
         			 Toast.makeText(getApplicationContext(), "저장 완료!", Toast.LENGTH_LONG).show();
		}
	
	}
}



Public class MyDraw extends view{
	int sx,sy,ex,ey;	//직선 시작좌표 끝 좌표
	int cx,xy;	//원 좌표
	Random rnd=new Random();
	int CircleSize;
	Paint paintColor=new Paint();
	
	private boolean circle=false;
	private boolean line=false;
	
	paintColor.setColor(Color.black);
	
	
	protected void onDraw(Canvas canvas){
		if(circle){
			canvas.drawCircle(cx,cy,CircleSize,paintColor);
			circle=false;
		}
		else if(line){
			canvas.drawLine(sx,sy,ex,sy,paintColor);
			line=false;
		}
	}
	
	Public boolean onTouchEvent(MotionEvent event){
		cx=(int)event.getX();
		cy=(int)event.getY();
		if(event.getAction()==MotionEvent.ACTION_DOWN){
			sx=(int)event.getX();
			sy=(int)event.getY();
			
			If(rnd.nextInt(10)>5){
				CircleSize=rnd.nextInt(145)+5
				paintColor.setStrokeWidth(1f);//여기가 두께
				paintColor.setStyle(Paint.Style.Stroke);
				circle=true;
				onDraw();
			} else{
				CircleSize=rnd.nextInt(145)+5
				paintColor.setStyle(Paint.Style.Fill);
				circle=true;
				onDraw();
			}
		else if(event.getAction()==MotionEvent.ACTION_MOVE){
			ex=(int)event.getX();
			ey=(int)event.getY();
			line=true;
			onDraw();
		}
		
		return true;	
	}
		
}
