

public class QuestManager : MonoBehaviour{
  
  public int QuestId;
  public int questActionIndex;
  public GameObject[] questObject;
  
  Dictionary<int,QuestData> questList;
  
  void awake(){
    questList = new Dictionary<int, QuestData>();
    GenerateData();
  }
  
  void GenerateData(){
    questList.Add(10, new QuestData("마을 사람들과 대화하기", new int[]{1000,2000}));
    
    questList.Add(20, new QuestData("루도의 동전 찾아주기.", new int[]{5000,2000}));
    
    //int 배열에 들어간 것이 퀘스트의 순서(npc id)
  }
  
  public int GetQuestTalkIndex(int id){
    //npc id를 받고 퀘스트 번호를 반환
    
    return questId+questActionIndex;
  }
  
  public String CheckQuest(int id){
  
    //퀘스트 오브젝트 관리(대화 끝날 시)
    ControlObject();
  
    //특정 인물과 이야기했을 때만 증가
    if(id==questList[questId].npcId[questActionIndex])
      questActionIndex++; 
    
    //한 퀘스트의 index가 끝이 난 후
    if(questActionIndex==questList[questId].npcId.Length)
      NextQuest();
      
    return questList[questId].questName;
  }
  
  void NextQuest(){
    //다음 퀘스트로 넘어가기 위한 함수
    
    questId+=10;
    
    //새로운 퀘스트를 시작했기에 초기화
    questActionIndex=0;
  }
  
  
  //퀘스트 오브젝트를 관리
  void ControlObjext(questId){
    switch(questId){
      case 10:
        if(questActionIndex==2)
          //원래는 꺼져있다.(안 보인다.)
          questObject[0].SetActive(true);
        break;
      case 20:
        if(questActionIndex==1)
          questObject[0].SetActive(false);
        break;
    
  }
}
