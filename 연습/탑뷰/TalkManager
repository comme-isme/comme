public class TalkManager : MonoBehaviour{
  Dictionary<int, string[]> talkData;
  
  void Awake(){
    talkData =new Dictionary<int, stringp[]>();
    GenerateData();
  }
  
  void GenerateData(){
    //dictionary에 데이터 추가
    talkData.Add(1000, new string[]{ "안녕?", "이 곳에 처음이구나?"});
    talkData.Add(100, new string[]{ "평범한 나무상자다."});
    talkData.Add(200, new string[]{ "누군가 사용한 흔적이 있다."});
    
    
    //quest Talk
    talkData.Add(10+1000,new String[]{"어서와.:0", "이 마을에 놀라운 전설이 있다는데 : 1", "오른쪽 호수 쪽에 루도가 알려줄꺼야:0"});
    talkData.Add(11+2000,new String[]{"여어.:1", "이 호수의 전설을 들으러 온거야?:0", "그럼 일 좀 하나 해주면 좋을텐데....:1",
                                       "내 집 근처에 떨어진 동전 좀 주워줬으면 좋겠어.:0"});
    talkData.Add(20+1000,new String[]{"루도의 동전?:1", "이 바보가.:1"});
    
    talkData.Add(20+2000,new String[]{"찾은면 꼭 가져다 줘.:1"});
    talkData.Add(20+5000,new String[]{"근처에서 동전을 찾았다."});
    talkData.Add(21+2000,new String[]{"엇, 찾아줘서 고마워:2"});
  }
  
  public string GetTalk(int id, int talkIndex){
  
    //예외처리(퀘스트 번호에 해당하는 번호가 없을때)
    if(talkData.ContainsKey(talkIndex)){
    
      //퀘스트 기본 대화 있는 지 확인후 없다면 완전 기본 대사
      if(talkData.ContainsKey(id-id%10)){
         if(talkIndex==talkData[id-id%100].Length)
           return null;
         else
          //퀘스트 대화순서 제거후 재 탐색
          return talkData[id-id%100][talkIndex];
      }
      else{
        //그렇지 않으면 퀘스트 기본 대사
        if(talkIndex==talkData[id-id%10].Length)
          return null;
        else
          //퀘스트 대화순서 제거후 재 탐색
          return talkData[id-id%10][talkIndex];
      }      
    }
  
    //처음[]는 dictionary 두번째는 배열
    if(talkIndex == talkData[id].Legth)
      return null;
    else
      return talkData[id][talkIndex];
  }
}
