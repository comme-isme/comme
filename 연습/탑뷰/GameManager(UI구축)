canvas를 우선 만들고 pixel perfect를 켜준다.
pixel ui(그림)을 넣고, 이미지 깨짐 방지를 위해 image type을 sliecd로 바꿔준다.
그러기 위해서는 sprite edit을 해야한다. -> 모서리를 잡기 위해 변하지 않을 부분(border블록)을 설정한다.(모서리랑 그림)
Anchor를 이용하여 아래쪽과 다 채우기를 설정(여백 설정 가능)
ui에 text 만들기-> ui 안에 만들어라
text도 anchor 이용(alt 누르면 길이 조절, shift도 눌르면 기준점 조절)

이제 action 띄우자(데이터 전달)

데이터 전달을 위한 매니저 생성(script)

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
//ui 프로그래밍
using UnityEngine.UI;

public class GameManger : MonoBehaviour
{
  public TalkManager talkManager;
  public QuestManager questManager;
  public GameObject talkPanel;
  public Text talkText;
  public GameObject scanObject;
  public bool isAction;
  public int talkIndex;
  
  
  void Start(){
    Debug.Log(questManager.CheckQuest());
  }
  
  
  public void Action(GameObject scanObj){
    scanObject=scanObj;
    Object objData= scanObject.GetComponent<ObjData>();
    Talk(objData.id, objData.isNpc);
    
    talkPanel.setActive(isAction);
  } 
  
  
  void Talk(int id, bool isNpc){
  
    int questTalkIndex=questManager.GetQuestTalkIndex(id);
    string talkData = talkManager.GetTalk(id+questTalkIndex, talkIndex);   //퀘스트 대화 데이터 id를 int로 반환해서 더해줘서 찾아가게
    
    if(talkData==null){
      isAction =false;
      
      //초기화
      talkIndex=0;
      
      Debug.Log(questManager.CheckQuest(id));
      
      //void에서 return은 함수 강제 종료 (뒤쪽 if문들 실행 되지 않음)
      return;
    }

    if(isNpc){
      talkText.text=talkData;
    }
    else{
      talkText.text=talkData;
    }
    isAction = true;
    talkIndex++;
  }
}


그리고 '플레이어' 컴포넌트에서 GameManager를 불러올 수 있는 권한 부여




