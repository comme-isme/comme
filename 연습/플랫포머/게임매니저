create empty-> 이름 game manager -> script 추가(game manager)
스테이지도 비슷하게 한다.(1~2~3~스테이지)



using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class GameManager:MonoBehaviour{
  //점수와 스테이지 관리
  public int totalPoint;
  public int stagePoint;
  public int stageIndex;
  public int health;
  public PlayerMove player;  ->인스펙터창에 끌어다 놓기
  public GameObjectp[] Stages;
  
  public Image[] UIhealth;
  public Text UIpoint;
  public Text UIStage;  //=>다 갖다 박아 넣기
  public GameObject UIResetBtn;
  
  
  void Update(){
    UIPoint.text=(totlaPoint + StagePoint).ToString(); ->숫자를 문자로 바꾸기
  }
  
  
  
  public void NextStage(){
  
    //스테이지 변경
    if(StageIndex<Stage.Length-1){
     Stages[stageIndex].SetActive(false);
     stageIndex++;
     Stages[stageIndex].SetActive(true);
     PlayerReposition();
     
     UIStage.text"STAGE"+(StageIndex+1);
     Text btnText = UIRestartBtn.GetComponentInChildren<Text>(); //->자식 오브젝트까지 찾기
    }
    else {
      Time.timeScale=0; //->시간을 멈춘다.
      Debug.log("게임 클리어!");
      UIRestartBtn.SetActive(true);
    }
    totalPoint +=stagePoint;
    stagePoint=0;
  }
  
  //얘를 낭떨어지 밑으로 collider 설정
  void OnTriggerEnter2D(Collider2D collision){
    if(collision.gameObject.tag=="Player")
     
      //플레이어 원위치
      if(health>1)
        PlayerReposition()
        
      HelathDown();
    }
  }
  
  public void HealthDown(){
    if(health>1){
      health--;
      UIhealth[health].color = new Color(1,0,0,0.4f);
    }
    else
      UIhealth[0].color = new Color(1,0,0,0.4f);
      player.OnDie();
      
      //retry 버튼
      UIRestartBtn.SetActive(true);
  }  
  
  public void OnDie(){
    spriteRenderer.color=new Color(1,1,1,0.4f);
    spriteRenderer.flipY=true;
    capsuleCollider.enabled=false;
    rigid.AddForce(Vector2.up*5,ForceMode2D.Impulse);
  }
 
 void PlayerReposition(){
  player.transform.position=new Vector3(0,0,-1);
  player.VelocityZero();
 }
 
 public void Restart(){
  Time.timeScale=1; //->시간 복구 시키기
  SceneManager.LoadScene(0)  //-> 뭐지 이건... 재시작하기..
 }
}


PlayerMove 클래스에

  public AudioClip audioJump;
  .
  .
  .
  .
  AudioSoure audioSouce;
  다 넣음
  
  awake
   audioSource=GetComponent<AudioSource>()
  
  
  점프 시
    audiSource.clip = audioJump;
    audioSource.Play();
    
  혹은 함수 하나로 만들던지.
  그리고 변수를 인스펙터창에 옮겨 넣어라
  
  
  
