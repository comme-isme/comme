using System.Collections;
using System.Collections.Generic;
using UnityEngine;



public class EnemyMove : MonoBehaviour
{
  Rigidbody2D rigid;
  public int nextMove;
  Animator anim;
  SpriteRenderer spriterenderer;
  //콜라이더 만들어주기
  CapsuleCollider2D collider;
  
  void Awake()
  { 
    rigid = GetComponent<Rigidbody2D>();
    anim=GetComponent<Animator>();
    spriterenderer=GetComponent<Animator>();
    collider=GetComponent<CapsuleCollider2D>();
    Invoke("Think",5);
  }
  
  
  void FixedUpdate()
  {
    //기본 움직임 
    rigid.velocity=new Vector2(nextMove, rigid.velocity.y);
    
    //떨어지지 않게 ray함수 호출(지형 체크)
    Vector2 frontVec =new Vector2(rigid.position.x+nextMove*0.5f, rigid.position.y);
    Debug.DrawRay(frontVec, 
    RayCastHit2D rayHit = Physics2D.Raycast(frontVec, Vector3.down, 1, GetMask("Platform"));
    if(rayHit.collider==null){
      Turn();
    }
    
  }
  
  //재귀 함수-자기 자신을 한번 더 호출하는 함수
  void Think()
  {
    //최소~최대 범위의 랜덤 수 생성(최대 제외)
    nextMove=Random.Range(-1,2);
 
    anim.SetInteger("WalkSpeed", nextMove);
    
    //방향 설정
    //참이면 실행 아니면 안 되도록
    if(nextMove!=0)
      
      
      //재귀는 보통 맨 아래에
      float nextThinkTime = Random.Range(2f,5f);
      //딜레이 없이 재귀함수는 미친듯이 빠르게 된다.
      Invoke("Think",nextThinkTime);
  }
  
  void Turn()
  {
      nextMove=nextMove*-1;
      //nextMove*=-1;
      
      spriteRenderer.flipX= nextMove==1;
      
      //동작중인 Invoke함수 멈춤
      CancelInvoke();
      Invoke("Think",2);
  
  }
  
  //다른 클래스에서 호출하기 때문에 public
  //몬스터가 죽는 함수
  public void OnDamaged(){
    spriteRenderer.color=new Color(1,1,1,0.4f);
    spriteRenderer.flipY=true;
    collider.enabled=false;
    rigid.AddForce(Vector2.up*5, ForceMode2D.Impulse);
    Invoke("DeActive",5);
  
  }
  //몬스터 
  void DeActive(){
    gameObject.SetActive(false); 
  }
}




//애니메이션은 [유니티 기초-B18] 몬스터 AI 구현하기 30분 참고
